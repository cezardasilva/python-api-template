#!flask/bin/python
import sys
import os
from flask import Flask, jsonify
from flask_cors import CORS
from flasgger import Swagger
from config import Server
#from repositories.base_respository import mysql_db

#import all routers
from routers.home_router import home_route

app = Flask(__name__)
CORS(app)
app_setting = os.environ['APP_SETTINGS']
app.config.from_object(app_setting)

# This hook ensures that a connection is opened to handle any queries
# generated by the request.
#@app.before_request
#def _db_connect():
#    mysql_db.connect()

# This hook ensures that the connection is closed when we've finished
# processing the request.
#@app.teardown_request
#def _db_close(exc):
#    if not mysql_db.is_closed():
#        mysql_db.close()


swagger_template = {
  "swagger": "2.0",
  "info": {
    "title": "Template API",
    "description": "Python Template API",
    "contact": {
      "responsibleOrganization": "Template API",
      "responsibleDeveloper": "Cezar Alexandre",
      "email": "cezaralexandredasilva@gmail.com",
      "url": "#",
    },
    "version": "1.0.0"
  },
  "securityDefinitions":{
    "basicAuth": {
        "type": "basic"
    },
    "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-access-token"
    }
  },
  "tags":[{
        "name": "Auth",
        "description": "Operations about authorization service."
    }
  ],
  "host": "localhost:5000"
}
swagger = Swagger(app, template=swagger_template)

#register client routers
app.register_blueprint(home_route)
